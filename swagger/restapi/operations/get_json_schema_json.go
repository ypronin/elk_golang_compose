// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetJSONSchemaJSONHandlerFunc turns a function with the right signature into a get JSON schema JSON handler
type GetJSONSchemaJSONHandlerFunc func(GetJSONSchemaJSONParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetJSONSchemaJSONHandlerFunc) Handle(params GetJSONSchemaJSONParams) middleware.Responder {
	return fn(params)
}

// GetJSONSchemaJSONHandler interface for that can handle valid get JSON schema JSON params
type GetJSONSchemaJSONHandler interface {
	Handle(GetJSONSchemaJSONParams) middleware.Responder
}

// NewGetJSONSchemaJSON creates a new http.Handler for the get JSON schema JSON operation
func NewGetJSONSchemaJSON(ctx *middleware.Context, handler GetJSONSchemaJSONHandler) *GetJSONSchemaJSON {
	return &GetJSONSchemaJSON{Context: ctx, Handler: handler}
}

/*GetJSONSchemaJSON swagger:route GET /json-schema.json getJsonSchemaJson

GetJSONSchemaJSON get JSON schema JSON API

*/
type GetJSONSchemaJSON struct {
	Context *middleware.Context
	Handler GetJSONSchemaJSONHandler
}

func (o *GetJSONSchemaJSON) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetJSONSchemaJSONParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
